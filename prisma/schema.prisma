// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  }

model Profile {
  id String  @id @db.ObjectId  @default(auto()) @map("_id") // Use auto() for MongoDB's ObjectId
  userId String @unique
  name String
  imageUrl String
  email String

  servers Server[] 
  members Member[] 
  channels Channel[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Server{
  id String @id @db.ObjectId @default(auto()) @map("_id")
  name String
  imageUrl String
  inviteCode String
  profile Profile @relation(fields:[profileId],references: [id],onDelete:Cascade)
  profileId String @db.ObjectId 
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt
  members Member[]
  channels Channel[]
  @@index([profileId])
}

enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}

model Member{
  id String @id @db.ObjectId @default(auto()) @map("_id")
  role MemberRole @default(GUEST)
  profile Profile @relation(fields: [profileId],references: [id],onDelete:Cascade)
  profileId String @db.ObjectId
  serverId String @db.ObjectId
  server Server @relation(fields: [serverId],references: [id],onDelete:Cascade)
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt
  @@index([profileId])
  @@index([serverId])
}
enum ChannelType{
  AUDIO
  VIDEO
  TEXT
}

model Channel{
 id String @id @db.ObjectId @default(auto()) @map("_id")
 name String
 type ChannelType @default(TEXT)
 profileId String @db.ObjectId
 profile Profile @relation(fields: [profileId],references: [id],onDelete:Cascade)
 serverId String @db.ObjectId
 server Server @relation(fields: [serverId],references: [id])
 createdAt DateTime @default(now())  
 updatedAt DateTime @updatedAt
 @@index([profileId])
 @@index([serverId])
}
